# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term terminator

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun

# Colors variables
set $background #282a36
set $textcolor #f8f8f2
set $primary #bd93f9
set $secondary #6272a4
set $urgent #ff5555
#
### Output configuration
#

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output '*' bg ~/.local/share/wallpapers/carina_nebula.jpg fill
### Client Configuration
# class                 border      backgr.     text    indicator child_border1
client.focused          $secondary  $secondary  $textcolor
client.focused_inactive $secondary  $secondary  $textcolor
client.unfocused        $background $background $textcolor
client.urgent           $urgent     $background $textcolor
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
          timeout 600 'swaylock -f -i ~/.local/share/wallpapers/southern_ring_nebula.jpg \
          timeout 900 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'swaylock -f' \
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


### Input configuration
input type:keyboard {
  xkb_layout fr,se
  xkb_options caps:escape,grp:alt_shift_toggle
  xkb_numlock enabled
}

input type:touchpad {
  accel_profile adaptive
  click_method clickfinger
  dwt enabled
  middle_emulation enabled
  pointer_accel 0.3
  tap enabled
  tap_button_map lrm
}

output eDP1 scale 8

#
# Example configuration:
#
#   input 2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c exec reload
    ## Bind Swaylock with wallpaper
    bindsym $mod+Ctrl+l exec swaylock -i ~/.local/share/wallpapers/southern_ring_nebula.jpg

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+ampersand workspace number 1
    bindsym $mod+eacute workspace number 2
    bindsym $mod+quotedbl workspace number 3
    bindsym $mod+apostrophe workspace number 4
    bindsym $mod+parenleft workspace number 5
    bindsym $mod+minus workspace number 6
    bindsym $mod+egrave workspace number 7
    bindsym $mod+underscore workspace number 8
    bindsym $mod+ccedilla workspace number 9
    bindsym $mod+agrave workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+ampersand move container to workspace number 1
    bindsym $mod+Shift+eacute move container to workspace number 2
    bindsym $mod+Shift+quotedbl move container to workspace number 3
    bindsym $mod+Shift+apostrophe move container to workspace number 4
    bindsym $mod+Shift+parenleft move container to workspace number 5
    bindsym $mod+Shift+minus move container to workspace number 6
    bindsym $mod+Shift+egrave move container to workspace number 7
    bindsym $mod+Shift+underscore move container to workspace number 8
    bindsym $mod+Shift+ccedilla move container to workspace number 9
    bindsym $mod+Shift+agrave move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Allow switching between workspaces with left and right swipes
#
#    bindgesture swipe:left workspace prev
#    bindgesture swipe:right workspace next

    # Allow container movements by pinching them
#    bindgesture pinch:inward+up move up
#    bindgesture pinch:inward+down move down
#    bindgesture pinch:inward+left move left
#   bindgesture pinch:inward+right move right

#
# Move workspace to different output
#
    bindsym $mod+Control+Shift+Right move workspace to output right
    bindsym $mod+Control+Shift+Left move workspace to output left

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Take Screenshots with Grimshot
#
   bindsym $mod+p       exec grimshot --notify --cursor  save active
   bindsym $mod+Shift+p exec grimshot --notify copy area
   bindsym $mod+Ctrl+p  exec grimshot --cursor --notify save output
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Ctrl+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+Ctrl+minus scratchpad show
#
# Screen brightness
#
    bindsym XF86MonBrightnessUp exec light -A 5
    bindsym XF86MonBrightnessDown exec light -U 5
#
# Sound Control
#
    bindsym --locked XF86AudioMute exec pw-volume mute toggle; pkill -RTMIN+8 waybar
    bindsym --locked XF86AudioLowerVolume exec pw-volume change -2.5%; pkill -RTMIN+8 waybar
    bindsym --locked XF86AudioRaiseVolume exec pw-volume change +2.5%; pkill -RTMIN+8 waybar

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
    bindsym $mod+r mode "resize"
#
# Toggle Notifications
#
    exec mako --anchor bottom-right

#
# Clipboard manager
#
    exec copyq
    bindsym $mod+shift+v exec copyq toggle
    for_window [app_id="copyq"] floating enable, sticky enable, resize set height 600px width 550px, move position cursor, move down 330

#
# Start Session
#

#
# Create workspaces
#
    workspace 1
    workspace 2
    workspace 3
    workspace 4
#
# Assign Specific app_id and Xwayland classes to workspaces
#
    assign [app_id="Terminator"] workspace 1
    assign [class="Emacs"] workspace 2
    assign [app_id="emacs"] workspace 2
    assign [app_id="firefox-aurora"] workspace 3
    assign [class="Slack"] workspace 4
#
# Start the apps on selected workspaces
#
exec terminator
exec flatpak run org.gnu.emacs
exec firefox-developer/firefox
exec flatpak run com.slack.Slack

#
# Start Network agent
#
exec blueman-applet
#
# Enable Waybar
#
bar {
  swaybar_command waybar
}
include /etc/sway/config.d/*

# LocalWords:  grimshot
